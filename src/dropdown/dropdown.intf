{client{

class type focus_t =
object('self)
  inherit Dom_html.element

  method focus: unit Js.meth
end

type 'a dd_elt_t =
    ( (Html5_types.li Eliom_content.Html5.D.elt)
    * ('a Eliom_content.Html5.D.elt) list
    )

(** type which represent the methods of the object dropdown *)
class type ['a] dropdown =
object
constraint 'a = (#Html5_types.li_content_fun)
  val mutable _att : focus_t Js.t
  val mutable _index : int
  val mutable _lli : 'a dd_elt_t list
  val mutable _open : bool
  val mutable _ul : Dom_html.uListElement Js.t
  method active : 'a dd_elt_t
  method private decr : unit
  method private focus : unit
  method get : 'a Eliom_content.Html5.D.elt list list
  method hide : unit
  method private incr : unit
 (* low level member functions (could be unsafe/undefined behavior if
  * you do something wrong with these *)
  method internal_on_key_event : Dom_html.keyboardEvent Js.t -> unit
  method is_open : bool
  (* extra method *)
  method on_change : 'a dd_elt_t -> unit
  method on_focus : unit
  method on_hide : unit
  method on_key_event : Dom_html.keyboardEvent Js.t -> unit
  method on_reset : unit
  method on_show : unit
  method on_update : unit
  method private reset : unit
  method set : 'a Eliom_content.Html5.D.elt list list -> unit
  method show : unit
end

}}
